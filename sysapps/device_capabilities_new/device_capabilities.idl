// Copyright (c) 2013 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Device Capabilities API
namespace device_capabilities {
  dictionary SystemCPU {
    long numOfProcessors;
    DOMString archName;
    double load;
  };

  dictionary SystemMemory {
    // If we use long here, it will overflow.
    double capacity;
    double availCapacity;
  };

  enum StorageUnitType {
    fixed,
    removable,
    unknown
  };

  dictionary StorageUnit {
    DOMString id;
    DOMString name;
    DOMString type;
    // If we use long here, it will overflow.
    double capacity;
  };

  dictionary SystemStorage {
    StorageUnit[] storages;
  };

  callback SystemCPUPromise = void (SystemCPU info, DOMString error);
  callback SystemStoragePromise = void (SystemStorage info, DOMString error);
  callback SystemMemoryPromise = void (SystemMemory info, DOMString error);

  interface Functions {
    static void getCPUInfo(SystemCPUPromise promise);
    static void getMemoryInfo(SystemMemoryPromise promise);
    static void getStorageInfo(SystemStoragePromise promise);

    [nodoc] static DeviceCapabilities deviceCapabilitiesConstructor(DOMString objectId);
  };
};
